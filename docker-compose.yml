services:
  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5433:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data

  elasticsearch:
    image: elasticsearch:8.12.2
    container_name: elasticsearch
    environment:
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - discovery.type=single-node
      - xpack.security.enabled=false
    ports:
      - 9200:9200
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:9200 || exit 1" ]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 60s
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  backend:
    build:
      context: ./backend
    container_name: backend
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_started
      elasticsearch:
        condition: service_healthy
      redis:
        condition: service_started
    restart: unless-stopped
    env_file:
      - .env.docker
    volumes:
      - ./backend:/app
      - static_volume:/app/django-static
      - media_volume:/app/django-media

  celery:
    build:
      context: ./backend
    container_name: celery
    command: celery -A backend worker --loglevel=info
    depends_on:
      backend:
        condition: service_started
    env_file:
      - .env.docker
    volumes:
      - ./backend:/app

  celery-beat:
    build:
      context: ./backend
    container_name: celery-beat
    command: celery -A backend beat --loglevel=info
    depends_on:
      backend:
        condition: service_started
    env_file:
      - .env.docker
    volumes:
      - ./backend:/app

  flower:
    build:
      context: ./backend
    container_name: flower
    command: celery -A backend flower
    ports:
      - "5555:5555"
    depends_on:
      backend:
        condition: service_started
    env_file:
      - .env.docker
    volumes:
      - ./backend:/app

  locust:
    build:
      context: ./backend
    container_name: locust
    command: locust -f products/load_tests.py
    ports:
      - "8089:8089"
    depends_on:
      backend:
        condition: service_started
    volumes:
      - ./backend:/app

  nginx:
    build:
      context: ./frontend
    container_name: nginx
    volumes:
      - ./conf/nginx.conf:/etc/nginx/nginx.conf
      - static_volume:/django-static
      - media_volume:/django-media
    ports:
      - "80:80"
    depends_on:
      - backend
    restart: unless-stopped

volumes:
  static_volume:
  media_volume:
  pg_data:
  redis_data:
  elasticsearch_data:
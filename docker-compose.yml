version: '3.8'

services:
  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5433:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data

  elasticsearch:
    image: elasticsearch:8.12.2
    container_name: elasticsearch
    environment:
      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
      - discovery.type=single-node
      - xpack.security.enabled=false
    ports:
      - 9200:9200
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200"]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 10s

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"

  backend:
    build:
      context: ./backend
    container_name: django-app
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_started
      elasticsearch:
        condition: service_healthy
      redis:
        condition: service_started
    restart: on-failure:5
    env_file:
      - .env.docker
    volumes:
      - static_volume:/app/static

  nginx:
    image: nginx:latest
    container_name: nginx
    volumes:
      - ./conf/nginx.conf:/etc/nginx/nginx.conf
      - static_volume:/static
    ports:
      - "81:80"
    depends_on:
      - backend

  frontend:
    build:
      context: ./frontend
    container_name: react-app
    ports:
      - "3000:3000"

volumes:
  static_volume:
  pg_data: